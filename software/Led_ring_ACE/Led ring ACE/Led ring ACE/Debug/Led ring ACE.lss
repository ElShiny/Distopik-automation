
Led ring ACE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000010a  00800100  00000b86  00000c1a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b86  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004c  0080020a  0080020a  00000d24  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d24  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d80  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000dbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011ee  00000000  00000000  00000e84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a1d  00000000  00000000  00002072  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000082a  00000000  00000000  00002a8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001bc  00000000  00000000  000032bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e3  00000000  00000000  00003478  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005e0  00000000  00000000  00003a5b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  0000403b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	61 c0       	rjmp	.+194    	; 0xc4 <__ctors_end>
   2:	7b c0       	rjmp	.+246    	; 0xfa <__bad_interrupt>
   4:	7a c0       	rjmp	.+244    	; 0xfa <__bad_interrupt>
   6:	6d c1       	rjmp	.+730    	; 0x2e2 <__vector_3>
   8:	78 c0       	rjmp	.+240    	; 0xfa <__bad_interrupt>
   a:	77 c0       	rjmp	.+238    	; 0xfa <__bad_interrupt>
   c:	76 c0       	rjmp	.+236    	; 0xfa <__bad_interrupt>
   e:	75 c0       	rjmp	.+234    	; 0xfa <__bad_interrupt>
  10:	74 c0       	rjmp	.+232    	; 0xfa <__bad_interrupt>
  12:	73 c0       	rjmp	.+230    	; 0xfa <__bad_interrupt>
  14:	72 c0       	rjmp	.+228    	; 0xfa <__bad_interrupt>
  16:	71 c0       	rjmp	.+226    	; 0xfa <__bad_interrupt>
  18:	70 c0       	rjmp	.+224    	; 0xfa <__bad_interrupt>
  1a:	6f c0       	rjmp	.+222    	; 0xfa <__bad_interrupt>
  1c:	6e c0       	rjmp	.+220    	; 0xfa <__bad_interrupt>
  1e:	6d c0       	rjmp	.+218    	; 0xfa <__bad_interrupt>
  20:	6c c0       	rjmp	.+216    	; 0xfa <__bad_interrupt>
  22:	6b c0       	rjmp	.+214    	; 0xfa <__bad_interrupt>
  24:	6a c0       	rjmp	.+212    	; 0xfa <__bad_interrupt>
  26:	69 c0       	rjmp	.+210    	; 0xfa <__bad_interrupt>

00000028 <__trampolines_end>:
  28:	00 c2       	rjmp	.+1024   	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
  2a:	01 00       	.word	0x0001	; ????
  2c:	01 00       	.word	0x0001	; ????
  2e:	05 00       	.word	0x0005	; ????
  30:	05 00       	.word	0x0005	; ????
  32:	03 00       	.word	0x0003	; ????
  34:	00 e1       	ldi	r16, 0x10	; 16
  36:	00 00       	nop
  38:	01 00       	.word	0x0001	; ????
  3a:	0f 00       	.word	0x000f	; ????
  3c:	0f 00       	.word	0x000f	; ????
  3e:	0d 00       	.word	0x000d	; ????
  40:	00 96       	adiw	r24, 0x00	; 0
  42:	00 00       	nop
  44:	02 00       	.word	0x0002	; ????
  46:	19 00       	.word	0x0019	; ????
  48:	1a 00       	.word	0x001a	; ????
  4a:	17 00       	.word	0x0017	; ????
  4c:	12 7a       	andi	r17, 0xA2	; 162
  4e:	00 00       	nop
  50:	07 00       	.word	0x0007	; ????
  52:	20 00       	.word	0x0020	; ????
  54:	21 00       	.word	0x0021	; ????
  56:	1d 00       	.word	0x001d	; ????
  58:	80 70       	andi	r24, 0x00	; 0
  5a:	00 00       	nop
  5c:	0b 00       	.word	0x000b	; ????
  5e:	23 00       	.word	0x0023	; ????
  60:	23 00       	.word	0x0023	; ????
  62:	20 00       	.word	0x0020	; ????
  64:	00 4b       	sbci	r16, 0xB0	; 176
  66:	00 00       	nop
  68:	14 00       	.word	0x0014	; ????
  6a:	37 00       	.word	0x0037	; ????
  6c:	37 00       	.word	0x0037	; ????
  6e:	34 00       	.word	0x0034	; ????
  70:	40 38       	cpi	r20, 0x80	; 128
  72:	00 00       	nop
  74:	1e 00       	.word	0x001e	; ????
  76:	4b 00       	.word	0x004b	; ????
  78:	4b 00       	.word	0x004b	; ????
  7a:	48 00       	.word	0x0048	; ????
  7c:	80 25       	eor	r24, r0
  7e:	00 00       	nop
  80:	32 00       	.word	0x0032	; ????
  82:	72 00       	.word	0x0072	; ????
  84:	72 00       	.word	0x0072	; ????
  86:	70 00       	.word	0x0070	; ????
  88:	c0 12       	cpse	r12, r16
  8a:	00 00       	nop
  8c:	6e 00       	.word	0x006e	; ????
  8e:	e9 00       	.word	0x00e9	; ????
  90:	e9 00       	.word	0x00e9	; ????
  92:	e6 00       	.word	0x00e6	; ????
  94:	60 09       	sbc	r22, r0
  96:	00 00       	nop
  98:	e5 00       	.word	0x00e5	; ????
  9a:	d8 01       	movw	r26, r16
  9c:	d8 01       	movw	r26, r16
  9e:	d5 01       	movw	r26, r10
  a0:	b0 04       	cpc	r11, r0
  a2:	00 00       	nop
  a4:	d3 01       	movw	r26, r6
  a6:	b4 03       	fmuls	r19, r20
  a8:	b4 03       	fmuls	r19, r20
  aa:	b1 03       	fmuls	r19, r17
  ac:	58 02       	muls	r21, r24
  ae:	00 00       	nop
  b0:	b4 03       	fmuls	r19, r20
  b2:	67 07       	cpc	r22, r23
  b4:	67 07       	cpc	r22, r23
  b6:	62 07       	cpc	r22, r18
  b8:	2c 01       	movw	r4, r24
  ba:	00 00       	nop
  bc:	67 07       	cpc	r22, r23
  be:	dd 0e       	add	r13, r29
  c0:	dd 0e       	add	r13, r29
  c2:	da 0e       	add	r13, r26

000000c4 <__ctors_end>:
  c4:	11 24       	eor	r1, r1
  c6:	1f be       	out	0x3f, r1	; 63
  c8:	cf ef       	ldi	r28, 0xFF	; 255
  ca:	d2 e0       	ldi	r29, 0x02	; 2
  cc:	de bf       	out	0x3e, r29	; 62
  ce:	cd bf       	out	0x3d, r28	; 61

000000d0 <__do_copy_data>:
  d0:	12 e0       	ldi	r17, 0x02	; 2
  d2:	a0 e0       	ldi	r26, 0x00	; 0
  d4:	b1 e0       	ldi	r27, 0x01	; 1
  d6:	e6 e8       	ldi	r30, 0x86	; 134
  d8:	fb e0       	ldi	r31, 0x0B	; 11
  da:	02 c0       	rjmp	.+4      	; 0xe0 <__do_copy_data+0x10>
  dc:	05 90       	lpm	r0, Z+
  de:	0d 92       	st	X+, r0
  e0:	aa 30       	cpi	r26, 0x0A	; 10
  e2:	b1 07       	cpc	r27, r17
  e4:	d9 f7       	brne	.-10     	; 0xdc <__do_copy_data+0xc>

000000e6 <__do_clear_bss>:
  e6:	22 e0       	ldi	r18, 0x02	; 2
  e8:	aa e0       	ldi	r26, 0x0A	; 10
  ea:	b2 e0       	ldi	r27, 0x02	; 2
  ec:	01 c0       	rjmp	.+2      	; 0xf0 <.do_clear_bss_start>

000000ee <.do_clear_bss_loop>:
  ee:	1d 92       	st	X+, r1

000000f0 <.do_clear_bss_start>:
  f0:	a6 35       	cpi	r26, 0x56	; 86
  f2:	b2 07       	cpc	r27, r18
  f4:	e1 f7       	brne	.-8      	; 0xee <.do_clear_bss_loop>
  f6:	d7 d0       	rcall	.+430    	; 0x2a6 <main>
  f8:	44 c5       	rjmp	.+2696   	; 0xb82 <_exit>

000000fa <__bad_interrupt>:
  fa:	82 cf       	rjmp	.-252    	; 0x0 <__vectors>

000000fc <initACE>:
//#define  F_CPU 8000000


void initACE(){
	
	DDRB &= ~(0x03); //set ace pins on portx to input
  fc:	84 b1       	in	r24, 0x04	; 4
  fe:	8c 7f       	andi	r24, 0xFC	; 252
 100:	84 b9       	out	0x04, r24	; 4
	DDRC &= ~(0x87);
 102:	87 b1       	in	r24, 0x07	; 7
 104:	88 77       	andi	r24, 0x78	; 120
 106:	87 b9       	out	0x07, r24	; 7
	DDRD = 0x08; //set EN to output
 108:	88 e0       	ldi	r24, 0x08	; 8
 10a:	8a b9       	out	0x0a, r24	; 10
	
	PORTD |= 1<<ACE_EN;
 10c:	8b b1       	in	r24, 0x0b	; 11
 10e:	88 60       	ori	r24, 0x08	; 8
 110:	8b b9       	out	0x0b, r24	; 11
 112:	08 95       	ret

00000114 <ACETransform>:
	
	return raw_val;
}

uint8_t ACETransform(uint8_t val){
	return encoderMap[val];
 114:	e8 2f       	mov	r30, r24
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	e0 50       	subi	r30, 0x00	; 0
 11a:	ff 4f       	sbci	r31, 0xFF	; 255
}
 11c:	80 81       	ld	r24, Z
 11e:	08 95       	ret

00000120 <isBitSet>:
	PORTD |= 1<<ACE_EN;
	return val;
}

uint8_t isBitSet(uint8_t reg, uint8_t pin){
	if (reg & pin) return 0;
 120:	86 23       	and	r24, r22
 122:	11 f0       	breq	.+4      	; 0x128 <isBitSet+0x8>
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	08 95       	ret
	else return 1;
 128:	81 e0       	ldi	r24, 0x01	; 1
}
 12a:	08 95       	ret

0000012c <readACEValRaw>:
	PORTD |= 1<<ACE_EN;
	//PORTD &= ~(1<<ACE_EN);
}


uint8_t readACEValRaw(void){
 12c:	cf 93       	push	r28
 12e:	df 93       	push	r29
	uint8_t raw_val = 0;
	PORTD &= ~(1<<ACE_EN);
 130:	8b b1       	in	r24, 0x0b	; 11
 132:	87 7f       	andi	r24, 0xF7	; 247
 134:	8b b9       	out	0x0b, r24	; 11
	
	//_delay_us(50);
	raw_val = isBitSet(ACE_P8_PORT , ACE_P8)<<7|isBitSet(ACE_P7_PORT , ACE_P7)<<6|isBitSet(ACE_P6_PORT , ACE_P6)<<5|
 136:	86 b1       	in	r24, 0x06	; 6
 138:	60 e8       	ldi	r22, 0x80	; 128
 13a:	f2 df       	rcall	.-28     	; 0x120 <isBitSet>
 13c:	c8 2f       	mov	r28, r24
 13e:	d0 e0       	ldi	r29, 0x00	; 0
 140:	d6 95       	lsr	r29
 142:	dc 2f       	mov	r29, r28
 144:	cc 27       	eor	r28, r28
 146:	d7 95       	ror	r29
 148:	c7 95       	ror	r28
 14a:	86 b1       	in	r24, 0x06	; 6
 14c:	61 e0       	ldi	r22, 0x01	; 1
 14e:	e8 df       	rcall	.-48     	; 0x120 <isBitSet>
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	00 24       	eor	r0, r0
 154:	96 95       	lsr	r25
 156:	87 95       	ror	r24
 158:	07 94       	ror	r0
 15a:	96 95       	lsr	r25
 15c:	87 95       	ror	r24
 15e:	07 94       	ror	r0
 160:	98 2f       	mov	r25, r24
 162:	80 2d       	mov	r24, r0
 164:	c8 2b       	or	r28, r24
 166:	86 b1       	in	r24, 0x06	; 6
 168:	62 e0       	ldi	r22, 0x02	; 2
 16a:	da df       	rcall	.-76     	; 0x120 <isBitSet>
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	82 95       	swap	r24
 174:	92 95       	swap	r25
 176:	90 7f       	andi	r25, 0xF0	; 240
 178:	98 27       	eor	r25, r24
 17a:	80 7f       	andi	r24, 0xF0	; 240
 17c:	98 27       	eor	r25, r24
 17e:	c8 2b       	or	r28, r24
	isBitSet(ACE_P5_PORT , ACE_P5)<<4|isBitSet(ACE_P4_PORT , ACE_P4)<<3|isBitSet(ACE_P3_PORT , ACE_P3)<<2|
 180:	86 b1       	in	r24, 0x06	; 6
 182:	64 e0       	ldi	r22, 0x04	; 4
 184:	cd df       	rcall	.-102    	; 0x120 <isBitSet>
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	82 95       	swap	r24
 18a:	92 95       	swap	r25
 18c:	90 7f       	andi	r25, 0xF0	; 240
 18e:	98 27       	eor	r25, r24
 190:	80 7f       	andi	r24, 0xF0	; 240
 192:	98 27       	eor	r25, r24
uint8_t readACEValRaw(void){
	uint8_t raw_val = 0;
	PORTD &= ~(1<<ACE_EN);
	
	//_delay_us(50);
	raw_val = isBitSet(ACE_P8_PORT , ACE_P8)<<7|isBitSet(ACE_P7_PORT , ACE_P7)<<6|isBitSet(ACE_P6_PORT , ACE_P6)<<5|
 194:	c8 2b       	or	r28, r24
	isBitSet(ACE_P5_PORT , ACE_P5)<<4|isBitSet(ACE_P4_PORT , ACE_P4)<<3|isBitSet(ACE_P3_PORT , ACE_P3)<<2|
 196:	89 b1       	in	r24, 0x09	; 9
 198:	60 e4       	ldi	r22, 0x40	; 64
 19a:	c2 df       	rcall	.-124    	; 0x120 <isBitSet>
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	88 0f       	add	r24, r24
 1a0:	99 1f       	adc	r25, r25
 1a2:	88 0f       	add	r24, r24
 1a4:	99 1f       	adc	r25, r25
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
uint8_t readACEValRaw(void){
	uint8_t raw_val = 0;
	PORTD &= ~(1<<ACE_EN);
	
	//_delay_us(50);
	raw_val = isBitSet(ACE_P8_PORT , ACE_P8)<<7|isBitSet(ACE_P7_PORT , ACE_P7)<<6|isBitSet(ACE_P6_PORT , ACE_P6)<<5|
 1aa:	c8 2b       	or	r28, r24
	isBitSet(ACE_P5_PORT , ACE_P5)<<4|isBitSet(ACE_P4_PORT , ACE_P4)<<3|isBitSet(ACE_P3_PORT , ACE_P3)<<2|
 1ac:	89 b1       	in	r24, 0x09	; 9
 1ae:	60 e8       	ldi	r22, 0x80	; 128
 1b0:	b7 df       	rcall	.-146    	; 0x120 <isBitSet>
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	88 0f       	add	r24, r24
 1b6:	99 1f       	adc	r25, r25
 1b8:	88 0f       	add	r24, r24
 1ba:	99 1f       	adc	r25, r25
uint8_t readACEValRaw(void){
	uint8_t raw_val = 0;
	PORTD &= ~(1<<ACE_EN);
	
	//_delay_us(50);
	raw_val = isBitSet(ACE_P8_PORT , ACE_P8)<<7|isBitSet(ACE_P7_PORT , ACE_P7)<<6|isBitSet(ACE_P6_PORT , ACE_P6)<<5|
 1bc:	c8 2b       	or	r28, r24
	isBitSet(ACE_P5_PORT , ACE_P5)<<4|isBitSet(ACE_P4_PORT , ACE_P4)<<3|isBitSet(ACE_P3_PORT , ACE_P3)<<2|
	isBitSet(ACE_P2_PORT , ACE_P2)<<1|isBitSet(ACE_P1_PORT, ACE_P1);
 1be:	83 b1       	in	r24, 0x03	; 3
 1c0:	61 e0       	ldi	r22, 0x01	; 1
 1c2:	ae df       	rcall	.-164    	; 0x120 <isBitSet>
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	88 0f       	add	r24, r24
 1c8:	99 1f       	adc	r25, r25
uint8_t readACEValRaw(void){
	uint8_t raw_val = 0;
	PORTD &= ~(1<<ACE_EN);
	
	//_delay_us(50);
	raw_val = isBitSet(ACE_P8_PORT , ACE_P8)<<7|isBitSet(ACE_P7_PORT , ACE_P7)<<6|isBitSet(ACE_P6_PORT , ACE_P6)<<5|
 1ca:	c8 2b       	or	r28, r24
	isBitSet(ACE_P5_PORT , ACE_P5)<<4|isBitSet(ACE_P4_PORT , ACE_P4)<<3|isBitSet(ACE_P3_PORT , ACE_P3)<<2|
	isBitSet(ACE_P2_PORT , ACE_P2)<<1|isBitSet(ACE_P1_PORT, ACE_P1);
 1cc:	83 b1       	in	r24, 0x03	; 3
 1ce:	62 e0       	ldi	r22, 0x02	; 2
 1d0:	a7 df       	rcall	.-178    	; 0x120 <isBitSet>
	
	PORTD |= 1<<ACE_EN;
 1d2:	9b b1       	in	r25, 0x0b	; 11
 1d4:	98 60       	ori	r25, 0x08	; 8
 1d6:	9b b9       	out	0x0b, r25	; 11
	
	return raw_val;
}
 1d8:	8c 2b       	or	r24, r28
 1da:	df 91       	pop	r29
 1dc:	cf 91       	pop	r28
 1de:	08 95       	ret

000001e0 <readACEQuick>:

uint8_t ACETransform(uint8_t val){
	return encoderMap[val];
}

uint8_t readACEQuick(void){
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
	
	PORTD &= ~(1<<ACE_EN);
 1e4:	8b b1       	in	r24, 0x0b	; 11
 1e6:	87 7f       	andi	r24, 0xF7	; 247
 1e8:	8b b9       	out	0x0b, r24	; 11
	//_delay_us(10);
	uint8_t val = encoderMap[isBitSet(ACE_P8_PORT , ACE_P8)<<7|isBitSet(ACE_P7_PORT , ACE_P7)<<6|isBitSet(ACE_P6_PORT , ACE_P6)<<5|
 1ea:	86 b1       	in	r24, 0x06	; 6
 1ec:	60 e8       	ldi	r22, 0x80	; 128
 1ee:	98 df       	rcall	.-208    	; 0x120 <isBitSet>
 1f0:	c8 2f       	mov	r28, r24
 1f2:	d0 e0       	ldi	r29, 0x00	; 0
 1f4:	d6 95       	lsr	r29
 1f6:	dc 2f       	mov	r29, r28
 1f8:	cc 27       	eor	r28, r28
 1fa:	d7 95       	ror	r29
 1fc:	c7 95       	ror	r28
 1fe:	86 b1       	in	r24, 0x06	; 6
 200:	61 e0       	ldi	r22, 0x01	; 1
 202:	8e df       	rcall	.-228    	; 0x120 <isBitSet>
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	00 24       	eor	r0, r0
 208:	96 95       	lsr	r25
 20a:	87 95       	ror	r24
 20c:	07 94       	ror	r0
 20e:	96 95       	lsr	r25
 210:	87 95       	ror	r24
 212:	07 94       	ror	r0
 214:	98 2f       	mov	r25, r24
 216:	80 2d       	mov	r24, r0
 218:	c8 2b       	or	r28, r24
 21a:	d9 2b       	or	r29, r25
 21c:	86 b1       	in	r24, 0x06	; 6
 21e:	62 e0       	ldi	r22, 0x02	; 2
 220:	7f df       	rcall	.-258    	; 0x120 <isBitSet>
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	88 0f       	add	r24, r24
 226:	99 1f       	adc	r25, r25
 228:	82 95       	swap	r24
 22a:	92 95       	swap	r25
 22c:	90 7f       	andi	r25, 0xF0	; 240
 22e:	98 27       	eor	r25, r24
 230:	80 7f       	andi	r24, 0xF0	; 240
 232:	98 27       	eor	r25, r24
 234:	c8 2b       	or	r28, r24
 236:	d9 2b       	or	r29, r25
	isBitSet(ACE_P5_PORT , ACE_P5)<<4|isBitSet(ACE_P4_PORT , ACE_P4)<<3|isBitSet(ACE_P3_PORT , ACE_P3)<<2|
 238:	86 b1       	in	r24, 0x06	; 6
 23a:	64 e0       	ldi	r22, 0x04	; 4
 23c:	71 df       	rcall	.-286    	; 0x120 <isBitSet>
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	82 95       	swap	r24
 242:	92 95       	swap	r25
 244:	90 7f       	andi	r25, 0xF0	; 240
 246:	98 27       	eor	r25, r24
 248:	80 7f       	andi	r24, 0xF0	; 240
 24a:	98 27       	eor	r25, r24

uint8_t readACEQuick(void){
	
	PORTD &= ~(1<<ACE_EN);
	//_delay_us(10);
	uint8_t val = encoderMap[isBitSet(ACE_P8_PORT , ACE_P8)<<7|isBitSet(ACE_P7_PORT , ACE_P7)<<6|isBitSet(ACE_P6_PORT , ACE_P6)<<5|
 24c:	c8 2b       	or	r28, r24
 24e:	d9 2b       	or	r29, r25
	isBitSet(ACE_P5_PORT , ACE_P5)<<4|isBitSet(ACE_P4_PORT , ACE_P4)<<3|isBitSet(ACE_P3_PORT , ACE_P3)<<2|
 250:	89 b1       	in	r24, 0x09	; 9
 252:	60 e4       	ldi	r22, 0x40	; 64
 254:	65 df       	rcall	.-310    	; 0x120 <isBitSet>
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	88 0f       	add	r24, r24
 25a:	99 1f       	adc	r25, r25
 25c:	88 0f       	add	r24, r24
 25e:	99 1f       	adc	r25, r25
 260:	88 0f       	add	r24, r24
 262:	99 1f       	adc	r25, r25
 264:	c8 2b       	or	r28, r24
 266:	d9 2b       	or	r29, r25
 268:	89 b1       	in	r24, 0x09	; 9
 26a:	60 e8       	ldi	r22, 0x80	; 128
 26c:	59 df       	rcall	.-334    	; 0x120 <isBitSet>
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	c8 2b       	or	r28, r24
 27a:	d9 2b       	or	r29, r25
	isBitSet(ACE_P2_PORT , ACE_P2)<<1|isBitSet(ACE_P1_PORT, ACE_P1)];
 27c:	83 b1       	in	r24, 0x03	; 3
 27e:	61 e0       	ldi	r22, 0x01	; 1
 280:	4f df       	rcall	.-354    	; 0x120 <isBitSet>
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	88 0f       	add	r24, r24
 286:	99 1f       	adc	r25, r25
uint8_t readACEQuick(void){
	
	PORTD &= ~(1<<ACE_EN);
	//_delay_us(10);
	uint8_t val = encoderMap[isBitSet(ACE_P8_PORT , ACE_P8)<<7|isBitSet(ACE_P7_PORT , ACE_P7)<<6|isBitSet(ACE_P6_PORT , ACE_P6)<<5|
	isBitSet(ACE_P5_PORT , ACE_P5)<<4|isBitSet(ACE_P4_PORT , ACE_P4)<<3|isBitSet(ACE_P3_PORT , ACE_P3)<<2|
 288:	c8 2b       	or	r28, r24
 28a:	d9 2b       	or	r29, r25
	isBitSet(ACE_P2_PORT , ACE_P2)<<1|isBitSet(ACE_P1_PORT, ACE_P1)];
 28c:	83 b1       	in	r24, 0x03	; 3
 28e:	62 e0       	ldi	r22, 0x02	; 2
 290:	47 df       	rcall	.-370    	; 0x120 <isBitSet>
 292:	c8 2b       	or	r28, r24

uint8_t readACEQuick(void){
	
	PORTD &= ~(1<<ACE_EN);
	//_delay_us(10);
	uint8_t val = encoderMap[isBitSet(ACE_P8_PORT , ACE_P8)<<7|isBitSet(ACE_P7_PORT , ACE_P7)<<6|isBitSet(ACE_P6_PORT , ACE_P6)<<5|
 294:	c0 50       	subi	r28, 0x00	; 0
 296:	df 4f       	sbci	r29, 0xFF	; 255
 298:	88 81       	ld	r24, Y
	isBitSet(ACE_P5_PORT , ACE_P5)<<4|isBitSet(ACE_P4_PORT , ACE_P4)<<3|isBitSet(ACE_P3_PORT , ACE_P3)<<2|
	isBitSet(ACE_P2_PORT , ACE_P2)<<1|isBitSet(ACE_P1_PORT, ACE_P1)];
	
	PORTD |= 1<<ACE_EN;
 29a:	9b b1       	in	r25, 0x0b	; 11
 29c:	98 60       	ori	r25, 0x08	; 8
 29e:	9b b9       	out	0x0b, r25	; 11
	return val;
}
 2a0:	df 91       	pop	r29
 2a2:	cf 91       	pop	r28
 2a4:	08 95       	ret

000002a6 <main>:
#include "SoftwareSerial.h"


int main(void)
{
	softSerialBegin(9600);
 2a6:	60 e8       	ldi	r22, 0x80	; 128
 2a8:	75 e2       	ldi	r23, 0x25	; 37
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	7c d0       	rcall	.+248    	; 0x3a8 <softSerialBegin>
	initACE();
 2b0:	25 df       	rcall	.-438    	; 0xfc <initACE>
	while (1) {
			debug_printf("raw: %d\r\n",readACEQuick());
 2b2:	96 df       	rcall	.-212    	; 0x1e0 <readACEQuick>
 2b4:	1f 92       	push	r1
 2b6:	8f 93       	push	r24
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	92 e0       	ldi	r25, 0x02	; 2
 2bc:	9f 93       	push	r25
 2be:	8f 93       	push	r24
 2c0:	40 d1       	rcall	.+640    	; 0x542 <debug_printf>
			ACETransform(readACEValRaw());
 2c2:	34 df       	rcall	.-408    	; 0x12c <readACEValRaw>
 2c4:	27 df       	rcall	.-434    	; 0x114 <ACETransform>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2c6:	2f ef       	ldi	r18, 0xFF	; 255
 2c8:	80 e7       	ldi	r24, 0x70	; 112
 2ca:	92 e0       	ldi	r25, 0x02	; 2
 2cc:	21 50       	subi	r18, 0x01	; 1
 2ce:	80 40       	sbci	r24, 0x00	; 0
 2d0:	90 40       	sbci	r25, 0x00	; 0
 2d2:	e1 f7       	brne	.-8      	; 0x2cc <main+0x26>
 2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <main+0x30>
 2d6:	00 00       	nop
 2d8:	0f 90       	pop	r0
 2da:	0f 90       	pop	r0
 2dc:	0f 90       	pop	r0
 2de:	0f 90       	pop	r0
 2e0:	e8 cf       	rjmp	.-48     	; 0x2b2 <main+0xc>

000002e2 <__vector_3>:
	if (_receive_buffer_head == _receive_buffer_tail)
		return -1;

	// Read from "head"
	return _receive_buffer[_receive_buffer_head];
}
 2e2:	1f 92       	push	r1
 2e4:	0f 92       	push	r0
 2e6:	0f b6       	in	r0, 0x3f	; 63
 2e8:	0f 92       	push	r0
 2ea:	11 24       	eor	r1, r1
 2ec:	2f 93       	push	r18
 2ee:	3f 93       	push	r19
 2f0:	4f 93       	push	r20
 2f2:	8f 93       	push	r24
 2f4:	9f 93       	push	r25
 2f6:	ef 93       	push	r30
 2f8:	ff 93       	push	r31
 2fa:	1f 99       	sbic	0x03, 7	; 3
 2fc:	49 c0       	rjmp	.+146    	; 0x390 <__stack+0x91>
 2fe:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <_rx_delay_centering>
 302:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <_rx_delay_centering+0x1>
 306:	20 e0       	ldi	r18, 0x00	; 0
 308:	01 97       	sbiw	r24, 0x01	; 1
 30a:	2f ef       	ldi	r18, 0xFF	; 255
 30c:	8f 3f       	cpi	r24, 0xFF	; 255
 30e:	92 07       	cpc	r25, r18
 310:	d9 f7       	brne	.-10     	; 0x308 <__stack+0x9>
 312:	21 e0       	ldi	r18, 0x01	; 1
 314:	40 e0       	ldi	r20, 0x00	; 0
 316:	12 c0       	rjmp	.+36     	; 0x33c <__stack+0x3d>
 318:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <_rx_delay_intrabit>
 31c:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <_rx_delay_intrabit+0x1>
 320:	30 e0       	ldi	r19, 0x00	; 0
 322:	01 97       	sbiw	r24, 0x01	; 1
 324:	3f ef       	ldi	r19, 0xFF	; 255
 326:	8f 3f       	cpi	r24, 0xFF	; 255
 328:	93 07       	cpc	r25, r19
 32a:	d9 f7       	brne	.-10     	; 0x322 <__stack+0x23>
 32c:	82 2f       	mov	r24, r18
 32e:	80 95       	com	r24
 330:	1f 9b       	sbis	0x03, 7	; 3
 332:	02 c0       	rjmp	.+4      	; 0x338 <__stack+0x39>
 334:	42 2b       	or	r20, r18
 336:	01 c0       	rjmp	.+2      	; 0x33a <__stack+0x3b>
 338:	48 23       	and	r20, r24
 33a:	22 0f       	add	r18, r18
 33c:	21 11       	cpse	r18, r1
 33e:	ec cf       	rjmp	.-40     	; 0x318 <__stack+0x19>
 340:	80 91 50 02 	lds	r24, 0x0250	; 0x800250 <_rx_delay_stopbit>
 344:	90 91 51 02 	lds	r25, 0x0251	; 0x800251 <_rx_delay_stopbit+0x1>
 348:	01 97       	sbiw	r24, 0x01	; 1
 34a:	2f ef       	ldi	r18, 0xFF	; 255
 34c:	8f 3f       	cpi	r24, 0xFF	; 255
 34e:	92 07       	cpc	r25, r18
 350:	d9 f7       	brne	.-10     	; 0x348 <__stack+0x49>
 352:	80 91 0b 02 	lds	r24, 0x020B	; 0x80020b <_receive_buffer_tail>
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	01 96       	adiw	r24, 0x01	; 1
 35a:	8f 73       	andi	r24, 0x3F	; 63
 35c:	99 27       	eor	r25, r25
 35e:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <__data_end>
 362:	30 e0       	ldi	r19, 0x00	; 0
 364:	82 17       	cp	r24, r18
 366:	93 07       	cpc	r25, r19
 368:	69 f0       	breq	.+26     	; 0x384 <__stack+0x85>
 36a:	e0 91 0b 02 	lds	r30, 0x020B	; 0x80020b <_receive_buffer_tail>
 36e:	f0 e0       	ldi	r31, 0x00	; 0
 370:	e4 5f       	subi	r30, 0xF4	; 244
 372:	fd 4f       	sbci	r31, 0xFD	; 253
 374:	40 83       	st	Z, r20
 376:	80 91 0b 02 	lds	r24, 0x020B	; 0x80020b <_receive_buffer_tail>
 37a:	8f 5f       	subi	r24, 0xFF	; 255
 37c:	8f 73       	andi	r24, 0x3F	; 63
 37e:	80 93 0b 02 	sts	0x020B, r24	; 0x80020b <_receive_buffer_tail>
 382:	06 c0       	rjmp	.+12     	; 0x390 <__stack+0x91>
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	90 e0       	ldi	r25, 0x00	; 0
 388:	90 93 4d 02 	sts	0x024D, r25	; 0x80024d <_buffer_overflow+0x1>
 38c:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <_buffer_overflow>
 390:	ff 91       	pop	r31
 392:	ef 91       	pop	r30
 394:	9f 91       	pop	r25
 396:	8f 91       	pop	r24
 398:	4f 91       	pop	r20
 39a:	3f 91       	pop	r19
 39c:	2f 91       	pop	r18
 39e:	0f 90       	pop	r0
 3a0:	0f be       	out	0x3f, r0	; 63
 3a2:	0f 90       	pop	r0
 3a4:	1f 90       	pop	r1
 3a6:	18 95       	reti

000003a8 <softSerialBegin>:
 3a8:	0f 93       	push	r16
 3aa:	1f 93       	push	r17
 3ac:	8b 01       	movw	r16, r22
 3ae:	9c 01       	movw	r18, r24
 3b0:	10 92 0b 02 	sts	0x020B, r1	; 0x80020b <_receive_buffer_tail>
 3b4:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <__data_end>
 3b8:	10 92 4d 02 	sts	0x024D, r1	; 0x80024d <_buffer_overflow+0x1>
 3bc:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <_buffer_overflow>
 3c0:	84 b1       	in	r24, 0x04	; 4
 3c2:	80 64       	ori	r24, 0x40	; 64
 3c4:	84 b9       	out	0x04, r24	; 4
 3c6:	84 b1       	in	r24, 0x04	; 4
 3c8:	8f 77       	andi	r24, 0x7F	; 127
 3ca:	84 b9       	out	0x04, r24	; 4
 3cc:	85 b1       	in	r24, 0x05	; 5
 3ce:	80 6c       	ori	r24, 0xC0	; 192
 3d0:	85 b9       	out	0x05, r24	; 5
 3d2:	80 e0       	ldi	r24, 0x00	; 0
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	6b c0       	rjmp	.+214    	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 3d8:	fc 01       	movw	r30, r24
 3da:	ee 0f       	add	r30, r30
 3dc:	ff 1f       	adc	r31, r31
 3de:	e8 0f       	add	r30, r24
 3e0:	f9 1f       	adc	r31, r25
 3e2:	ee 0f       	add	r30, r30
 3e4:	ff 1f       	adc	r31, r31
 3e6:	ee 0f       	add	r30, r30
 3e8:	ff 1f       	adc	r31, r31
 3ea:	e8 5d       	subi	r30, 0xD8	; 216
 3ec:	ff 4f       	sbci	r31, 0xFF	; 255
 3ee:	45 91       	lpm	r20, Z+
 3f0:	55 91       	lpm	r21, Z+
 3f2:	65 91       	lpm	r22, Z+
 3f4:	74 91       	lpm	r23, Z
 3f6:	40 17       	cp	r20, r16
 3f8:	51 07       	cpc	r21, r17
 3fa:	62 07       	cpc	r22, r18
 3fc:	73 07       	cpc	r23, r19
 3fe:	09 f0       	breq	.+2      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 400:	55 c0       	rjmp	.+170    	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 402:	9c 01       	movw	r18, r24
 404:	22 0f       	add	r18, r18
 406:	33 1f       	adc	r19, r19
 408:	f9 01       	movw	r30, r18
 40a:	e8 0f       	add	r30, r24
 40c:	f9 1f       	adc	r31, r25
 40e:	ee 0f       	add	r30, r30
 410:	ff 1f       	adc	r31, r31
 412:	ee 0f       	add	r30, r30
 414:	ff 1f       	adc	r31, r31
 416:	e4 5d       	subi	r30, 0xD4	; 212
 418:	ff 4f       	sbci	r31, 0xFF	; 255
 41a:	45 91       	lpm	r20, Z+
 41c:	54 91       	lpm	r21, Z
 41e:	50 93 55 02 	sts	0x0255, r21	; 0x800255 <_rx_delay_centering+0x1>
 422:	40 93 54 02 	sts	0x0254, r20	; 0x800254 <_rx_delay_centering>
 426:	f9 01       	movw	r30, r18
 428:	e8 0f       	add	r30, r24
 42a:	f9 1f       	adc	r31, r25
 42c:	ee 0f       	add	r30, r30
 42e:	ff 1f       	adc	r31, r31
 430:	ee 0f       	add	r30, r30
 432:	ff 1f       	adc	r31, r31
 434:	e2 5d       	subi	r30, 0xD2	; 210
 436:	ff 4f       	sbci	r31, 0xFF	; 255
 438:	45 91       	lpm	r20, Z+
 43a:	54 91       	lpm	r21, Z
 43c:	50 93 53 02 	sts	0x0253, r21	; 0x800253 <_rx_delay_intrabit+0x1>
 440:	40 93 52 02 	sts	0x0252, r20	; 0x800252 <_rx_delay_intrabit>
 444:	f9 01       	movw	r30, r18
 446:	e8 0f       	add	r30, r24
 448:	f9 1f       	adc	r31, r25
 44a:	ee 0f       	add	r30, r30
 44c:	ff 1f       	adc	r31, r31
 44e:	ee 0f       	add	r30, r30
 450:	ff 1f       	adc	r31, r31
 452:	e0 5d       	subi	r30, 0xD0	; 208
 454:	ff 4f       	sbci	r31, 0xFF	; 255
 456:	45 91       	lpm	r20, Z+
 458:	54 91       	lpm	r21, Z
 45a:	50 93 51 02 	sts	0x0251, r21	; 0x800251 <_rx_delay_stopbit+0x1>
 45e:	40 93 50 02 	sts	0x0250, r20	; 0x800250 <_rx_delay_stopbit>
 462:	f9 01       	movw	r30, r18
 464:	e8 0f       	add	r30, r24
 466:	f9 1f       	adc	r31, r25
 468:	ee 0f       	add	r30, r30
 46a:	ff 1f       	adc	r31, r31
 46c:	ee 0f       	add	r30, r30
 46e:	ff 1f       	adc	r31, r31
 470:	ee 5c       	subi	r30, 0xCE	; 206
 472:	ff 4f       	sbci	r31, 0xFF	; 255
 474:	85 91       	lpm	r24, Z+
 476:	94 91       	lpm	r25, Z
 478:	90 93 4f 02 	sts	0x024F, r25	; 0x80024f <_tx_delay+0x1>
 47c:	80 93 4e 02 	sts	0x024E, r24	; 0x80024e <_tx_delay>
 480:	e8 e6       	ldi	r30, 0x68	; 104
 482:	f0 e0       	ldi	r31, 0x00	; 0
 484:	80 81       	ld	r24, Z
 486:	81 60       	ori	r24, 0x01	; 1
 488:	80 83       	st	Z, r24
 48a:	eb e6       	ldi	r30, 0x6B	; 107
 48c:	f0 e0       	ldi	r31, 0x00	; 0
 48e:	80 81       	ld	r24, Z
 490:	80 68       	ori	r24, 0x80	; 128
 492:	80 83       	st	Z, r24
 494:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <_tx_delay>
 498:	90 91 4f 02 	lds	r25, 0x024F	; 0x80024f <_tx_delay+0x1>
 49c:	20 e0       	ldi	r18, 0x00	; 0
 49e:	01 97       	sbiw	r24, 0x01	; 1
 4a0:	2f ef       	ldi	r18, 0xFF	; 255
 4a2:	8f 3f       	cpi	r24, 0xFF	; 255
 4a4:	92 07       	cpc	r25, r18
 4a6:	d9 f7       	brne	.-10     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 4a8:	78 94       	sei
 4aa:	05 c0       	rjmp	.+10     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4ac:	01 96       	adiw	r24, 0x01	; 1
 4ae:	8d 30       	cpi	r24, 0x0D	; 13
 4b0:	91 05       	cpc	r25, r1
 4b2:	08 f4       	brcc	.+2      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4b4:	91 cf       	rjmp	.-222    	; 0x3d8 <softSerialBegin+0x30>
 4b6:	1f 91       	pop	r17
 4b8:	0f 91       	pop	r16
 4ba:	08 95       	ret

000004bc <softSerialWrite>:
 4bc:	20 91 4e 02 	lds	r18, 0x024E	; 0x80024e <_tx_delay>
 4c0:	30 91 4f 02 	lds	r19, 0x024F	; 0x80024f <_tx_delay+0x1>
 4c4:	21 15       	cp	r18, r1
 4c6:	31 05       	cpc	r19, r1
 4c8:	09 f4       	brne	.+2      	; 0x4cc <softSerialWrite+0x10>
 4ca:	39 c0       	rjmp	.+114    	; 0x53e <softSerialWrite+0x82>
 4cc:	3f b7       	in	r19, 0x3f	; 63
 4ce:	f8 94       	cli
 4d0:	95 b1       	in	r25, 0x05	; 5
 4d2:	9f 7b       	andi	r25, 0xBF	; 191
 4d4:	95 b9       	out	0x05, r25	; 5
 4d6:	e0 91 4e 02 	lds	r30, 0x024E	; 0x80024e <_tx_delay>
 4da:	f0 91 4f 02 	lds	r31, 0x024F	; 0x80024f <_tx_delay+0x1>
 4de:	34 96       	adiw	r30, 0x04	; 4
 4e0:	20 e0       	ldi	r18, 0x00	; 0
 4e2:	31 97       	sbiw	r30, 0x01	; 1
 4e4:	2f ef       	ldi	r18, 0xFF	; 255
 4e6:	ef 3f       	cpi	r30, 0xFF	; 255
 4e8:	f2 07       	cpc	r31, r18
 4ea:	d9 f7       	brne	.-10     	; 0x4e2 <softSerialWrite+0x26>
 4ec:	91 e0       	ldi	r25, 0x01	; 1
 4ee:	15 c0       	rjmp	.+42     	; 0x51a <softSerialWrite+0x5e>
 4f0:	29 2f       	mov	r18, r25
 4f2:	28 23       	and	r18, r24
 4f4:	21 f0       	breq	.+8      	; 0x4fe <softSerialWrite+0x42>
 4f6:	25 b1       	in	r18, 0x05	; 5
 4f8:	20 64       	ori	r18, 0x40	; 64
 4fa:	25 b9       	out	0x05, r18	; 5
 4fc:	03 c0       	rjmp	.+6      	; 0x504 <softSerialWrite+0x48>
 4fe:	25 b1       	in	r18, 0x05	; 5
 500:	2f 7b       	andi	r18, 0xBF	; 191
 502:	25 b9       	out	0x05, r18	; 5
 504:	e0 91 4e 02 	lds	r30, 0x024E	; 0x80024e <_tx_delay>
 508:	f0 91 4f 02 	lds	r31, 0x024F	; 0x80024f <_tx_delay+0x1>
 50c:	20 e0       	ldi	r18, 0x00	; 0
 50e:	31 97       	sbiw	r30, 0x01	; 1
 510:	2f ef       	ldi	r18, 0xFF	; 255
 512:	ef 3f       	cpi	r30, 0xFF	; 255
 514:	f2 07       	cpc	r31, r18
 516:	d9 f7       	brne	.-10     	; 0x50e <softSerialWrite+0x52>
 518:	99 0f       	add	r25, r25
 51a:	91 11       	cpse	r25, r1
 51c:	e9 cf       	rjmp	.-46     	; 0x4f0 <softSerialWrite+0x34>
 51e:	85 b1       	in	r24, 0x05	; 5
 520:	80 64       	ori	r24, 0x40	; 64
 522:	85 b9       	out	0x05, r24	; 5
 524:	3f bf       	out	0x3f, r19	; 63
 526:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <_tx_delay>
 52a:	90 91 4f 02 	lds	r25, 0x024F	; 0x80024f <_tx_delay+0x1>
 52e:	20 e0       	ldi	r18, 0x00	; 0
 530:	01 97       	sbiw	r24, 0x01	; 1
 532:	2f ef       	ldi	r18, 0xFF	; 255
 534:	8f 3f       	cpi	r24, 0xFF	; 255
 536:	92 07       	cpc	r25, r18
 538:	d9 f7       	brne	.-10     	; 0x530 <softSerialWrite+0x74>
 53a:	21 e0       	ldi	r18, 0x01	; 1
 53c:	30 e0       	ldi	r19, 0x00	; 0
 53e:	c9 01       	movw	r24, r18
 540:	08 95       	ret

00000542 <debug_printf>:

void debug_printf(const char *format, ...)
{
 542:	0f 93       	push	r16
 544:	1f 93       	push	r17
 546:	cf 93       	push	r28
 548:	df 93       	push	r29
 54a:	cd b7       	in	r28, 0x3d	; 61
 54c:	de b7       	in	r29, 0x3e	; 62
 54e:	e2 97       	sbiw	r28, 0x32	; 50
 550:	0f b6       	in	r0, 0x3f	; 63
 552:	f8 94       	cli
 554:	de bf       	out	0x3e, r29	; 62
 556:	0f be       	out	0x3f, r0	; 63
 558:	cd bf       	out	0x3d, r28	; 61
 55a:	9e 01       	movw	r18, r28
 55c:	27 5c       	subi	r18, 0xC7	; 199
 55e:	3f 4f       	sbci	r19, 0xFF	; 255
 560:	f9 01       	movw	r30, r18
 562:	41 91       	ld	r20, Z+
 564:	51 91       	ld	r21, Z+
 566:	9f 01       	movw	r18, r30
	char buffer[50];
	va_list args;
	va_start(args, format);
	vsnprintf(buffer, sizeof(buffer), format, args);
 568:	62 e3       	ldi	r22, 0x32	; 50
 56a:	70 e0       	ldi	r23, 0x00	; 0
 56c:	ce 01       	movw	r24, r28
 56e:	01 96       	adiw	r24, 0x01	; 1
 570:	1a d0       	rcall	.+52     	; 0x5a6 <vsnprintf>
	for(int i = 0; buffer[i] != 0 ; i++)
 572:	00 e0       	ldi	r16, 0x00	; 0
 574:	10 e0       	ldi	r17, 0x00	; 0
 576:	03 c0       	rjmp	.+6      	; 0x57e <debug_printf+0x3c>
	{
		softSerialWrite(buffer[i]);
 578:	a1 df       	rcall	.-190    	; 0x4bc <softSerialWrite>
{
	char buffer[50];
	va_list args;
	va_start(args, format);
	vsnprintf(buffer, sizeof(buffer), format, args);
	for(int i = 0; buffer[i] != 0 ; i++)
 57a:	0f 5f       	subi	r16, 0xFF	; 255
 57c:	1f 4f       	sbci	r17, 0xFF	; 255
 57e:	e1 e0       	ldi	r30, 0x01	; 1
 580:	f0 e0       	ldi	r31, 0x00	; 0
 582:	ec 0f       	add	r30, r28
 584:	fd 1f       	adc	r31, r29
 586:	e0 0f       	add	r30, r16
 588:	f1 1f       	adc	r31, r17
 58a:	80 81       	ld	r24, Z
 58c:	81 11       	cpse	r24, r1
 58e:	f4 cf       	rjmp	.-24     	; 0x578 <debug_printf+0x36>
	{
		softSerialWrite(buffer[i]);

	}
	va_end(args);
}
 590:	e2 96       	adiw	r28, 0x32	; 50
 592:	0f b6       	in	r0, 0x3f	; 63
 594:	f8 94       	cli
 596:	de bf       	out	0x3e, r29	; 62
 598:	0f be       	out	0x3f, r0	; 63
 59a:	cd bf       	out	0x3d, r28	; 61
 59c:	df 91       	pop	r29
 59e:	cf 91       	pop	r28
 5a0:	1f 91       	pop	r17
 5a2:	0f 91       	pop	r16
 5a4:	08 95       	ret

000005a6 <vsnprintf>:
 5a6:	ae e0       	ldi	r26, 0x0E	; 14
 5a8:	b0 e0       	ldi	r27, 0x00	; 0
 5aa:	e8 ed       	ldi	r30, 0xD8	; 216
 5ac:	f2 e0       	ldi	r31, 0x02	; 2
 5ae:	c0 c2       	rjmp	.+1408   	; 0xb30 <__prologue_saves__+0x1c>
 5b0:	8c 01       	movw	r16, r24
 5b2:	fa 01       	movw	r30, r20
 5b4:	86 e0       	ldi	r24, 0x06	; 6
 5b6:	8c 83       	std	Y+4, r24	; 0x04
 5b8:	1a 83       	std	Y+2, r17	; 0x02
 5ba:	09 83       	std	Y+1, r16	; 0x01
 5bc:	77 ff       	sbrs	r23, 7
 5be:	02 c0       	rjmp	.+4      	; 0x5c4 <vsnprintf+0x1e>
 5c0:	60 e0       	ldi	r22, 0x00	; 0
 5c2:	70 e8       	ldi	r23, 0x80	; 128
 5c4:	cb 01       	movw	r24, r22
 5c6:	01 97       	sbiw	r24, 0x01	; 1
 5c8:	9e 83       	std	Y+6, r25	; 0x06
 5ca:	8d 83       	std	Y+5, r24	; 0x05
 5cc:	a9 01       	movw	r20, r18
 5ce:	bf 01       	movw	r22, r30
 5d0:	ce 01       	movw	r24, r28
 5d2:	01 96       	adiw	r24, 0x01	; 1
 5d4:	11 d0       	rcall	.+34     	; 0x5f8 <vfprintf>
 5d6:	4d 81       	ldd	r20, Y+5	; 0x05
 5d8:	5e 81       	ldd	r21, Y+6	; 0x06
 5da:	57 fd       	sbrc	r21, 7
 5dc:	0a c0       	rjmp	.+20     	; 0x5f2 <vsnprintf+0x4c>
 5de:	2f 81       	ldd	r18, Y+7	; 0x07
 5e0:	38 85       	ldd	r19, Y+8	; 0x08
 5e2:	42 17       	cp	r20, r18
 5e4:	53 07       	cpc	r21, r19
 5e6:	0c f4       	brge	.+2      	; 0x5ea <vsnprintf+0x44>
 5e8:	9a 01       	movw	r18, r20
 5ea:	f8 01       	movw	r30, r16
 5ec:	e2 0f       	add	r30, r18
 5ee:	f3 1f       	adc	r31, r19
 5f0:	10 82       	st	Z, r1
 5f2:	2e 96       	adiw	r28, 0x0e	; 14
 5f4:	e4 e0       	ldi	r30, 0x04	; 4
 5f6:	b8 c2       	rjmp	.+1392   	; 0xb68 <__epilogue_restores__+0x1c>

000005f8 <vfprintf>:
 5f8:	ab e0       	ldi	r26, 0x0B	; 11
 5fa:	b0 e0       	ldi	r27, 0x00	; 0
 5fc:	e1 e0       	ldi	r30, 0x01	; 1
 5fe:	f3 e0       	ldi	r31, 0x03	; 3
 600:	89 c2       	rjmp	.+1298   	; 0xb14 <__prologue_saves__>
 602:	6c 01       	movw	r12, r24
 604:	7b 01       	movw	r14, r22
 606:	8a 01       	movw	r16, r20
 608:	fc 01       	movw	r30, r24
 60a:	17 82       	std	Z+7, r1	; 0x07
 60c:	16 82       	std	Z+6, r1	; 0x06
 60e:	83 81       	ldd	r24, Z+3	; 0x03
 610:	81 ff       	sbrs	r24, 1
 612:	c0 c1       	rjmp	.+896    	; 0x994 <vfprintf+0x39c>
 614:	ce 01       	movw	r24, r28
 616:	01 96       	adiw	r24, 0x01	; 1
 618:	3c 01       	movw	r6, r24
 61a:	f6 01       	movw	r30, r12
 61c:	93 81       	ldd	r25, Z+3	; 0x03
 61e:	f7 01       	movw	r30, r14
 620:	93 fd       	sbrc	r25, 3
 622:	85 91       	lpm	r24, Z+
 624:	93 ff       	sbrs	r25, 3
 626:	81 91       	ld	r24, Z+
 628:	7f 01       	movw	r14, r30
 62a:	88 23       	and	r24, r24
 62c:	09 f4       	brne	.+2      	; 0x630 <vfprintf+0x38>
 62e:	ae c1       	rjmp	.+860    	; 0x98c <vfprintf+0x394>
 630:	85 32       	cpi	r24, 0x25	; 37
 632:	39 f4       	brne	.+14     	; 0x642 <vfprintf+0x4a>
 634:	93 fd       	sbrc	r25, 3
 636:	85 91       	lpm	r24, Z+
 638:	93 ff       	sbrs	r25, 3
 63a:	81 91       	ld	r24, Z+
 63c:	7f 01       	movw	r14, r30
 63e:	85 32       	cpi	r24, 0x25	; 37
 640:	21 f4       	brne	.+8      	; 0x64a <vfprintf+0x52>
 642:	b6 01       	movw	r22, r12
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	c1 d1       	rcall	.+898    	; 0x9ca <fputc>
 648:	e8 cf       	rjmp	.-48     	; 0x61a <vfprintf+0x22>
 64a:	91 2c       	mov	r9, r1
 64c:	21 2c       	mov	r2, r1
 64e:	31 2c       	mov	r3, r1
 650:	ff e1       	ldi	r31, 0x1F	; 31
 652:	f3 15       	cp	r31, r3
 654:	e0 f0       	brcs	.+56     	; 0x68e <vfprintf+0x96>
 656:	8b 32       	cpi	r24, 0x2B	; 43
 658:	79 f0       	breq	.+30     	; 0x678 <vfprintf+0x80>
 65a:	38 f4       	brcc	.+14     	; 0x66a <vfprintf+0x72>
 65c:	80 32       	cpi	r24, 0x20	; 32
 65e:	79 f0       	breq	.+30     	; 0x67e <vfprintf+0x86>
 660:	83 32       	cpi	r24, 0x23	; 35
 662:	a9 f4       	brne	.+42     	; 0x68e <vfprintf+0x96>
 664:	23 2d       	mov	r18, r3
 666:	20 61       	ori	r18, 0x10	; 16
 668:	10 c0       	rjmp	.+32     	; 0x68a <vfprintf+0x92>
 66a:	8d 32       	cpi	r24, 0x2D	; 45
 66c:	59 f0       	breq	.+22     	; 0x684 <vfprintf+0x8c>
 66e:	80 33       	cpi	r24, 0x30	; 48
 670:	71 f4       	brne	.+28     	; 0x68e <vfprintf+0x96>
 672:	23 2d       	mov	r18, r3
 674:	21 60       	ori	r18, 0x01	; 1
 676:	09 c0       	rjmp	.+18     	; 0x68a <vfprintf+0x92>
 678:	83 2d       	mov	r24, r3
 67a:	82 60       	ori	r24, 0x02	; 2
 67c:	38 2e       	mov	r3, r24
 67e:	e3 2d       	mov	r30, r3
 680:	e4 60       	ori	r30, 0x04	; 4
 682:	22 c0       	rjmp	.+68     	; 0x6c8 <vfprintf+0xd0>
 684:	f3 2d       	mov	r31, r3
 686:	f8 60       	ori	r31, 0x08	; 8
 688:	25 c0       	rjmp	.+74     	; 0x6d4 <vfprintf+0xdc>
 68a:	32 2e       	mov	r3, r18
 68c:	27 c0       	rjmp	.+78     	; 0x6dc <vfprintf+0xe4>
 68e:	37 fc       	sbrc	r3, 7
 690:	2d c0       	rjmp	.+90     	; 0x6ec <vfprintf+0xf4>
 692:	20 ed       	ldi	r18, 0xD0	; 208
 694:	28 0f       	add	r18, r24
 696:	2a 30       	cpi	r18, 0x0A	; 10
 698:	88 f4       	brcc	.+34     	; 0x6bc <vfprintf+0xc4>
 69a:	36 fe       	sbrs	r3, 6
 69c:	06 c0       	rjmp	.+12     	; 0x6aa <vfprintf+0xb2>
 69e:	89 2d       	mov	r24, r9
 6a0:	6a e0       	ldi	r22, 0x0A	; 10
 6a2:	2f d2       	rcall	.+1118   	; 0xb02 <__mulqi3>
 6a4:	92 2e       	mov	r9, r18
 6a6:	98 0e       	add	r9, r24
 6a8:	19 c0       	rjmp	.+50     	; 0x6dc <vfprintf+0xe4>
 6aa:	82 2d       	mov	r24, r2
 6ac:	6a e0       	ldi	r22, 0x0A	; 10
 6ae:	29 d2       	rcall	.+1106   	; 0xb02 <__mulqi3>
 6b0:	22 2e       	mov	r2, r18
 6b2:	28 0e       	add	r2, r24
 6b4:	83 2d       	mov	r24, r3
 6b6:	80 62       	ori	r24, 0x20	; 32
 6b8:	38 2e       	mov	r3, r24
 6ba:	10 c0       	rjmp	.+32     	; 0x6dc <vfprintf+0xe4>
 6bc:	8e 32       	cpi	r24, 0x2E	; 46
 6be:	31 f4       	brne	.+12     	; 0x6cc <vfprintf+0xd4>
 6c0:	36 fc       	sbrc	r3, 6
 6c2:	64 c1       	rjmp	.+712    	; 0x98c <vfprintf+0x394>
 6c4:	e3 2d       	mov	r30, r3
 6c6:	e0 64       	ori	r30, 0x40	; 64
 6c8:	3e 2e       	mov	r3, r30
 6ca:	08 c0       	rjmp	.+16     	; 0x6dc <vfprintf+0xe4>
 6cc:	8c 36       	cpi	r24, 0x6C	; 108
 6ce:	21 f4       	brne	.+8      	; 0x6d8 <vfprintf+0xe0>
 6d0:	f3 2d       	mov	r31, r3
 6d2:	f0 68       	ori	r31, 0x80	; 128
 6d4:	3f 2e       	mov	r3, r31
 6d6:	02 c0       	rjmp	.+4      	; 0x6dc <vfprintf+0xe4>
 6d8:	88 36       	cpi	r24, 0x68	; 104
 6da:	41 f4       	brne	.+16     	; 0x6ec <vfprintf+0xf4>
 6dc:	f7 01       	movw	r30, r14
 6de:	93 fd       	sbrc	r25, 3
 6e0:	85 91       	lpm	r24, Z+
 6e2:	93 ff       	sbrs	r25, 3
 6e4:	81 91       	ld	r24, Z+
 6e6:	7f 01       	movw	r14, r30
 6e8:	81 11       	cpse	r24, r1
 6ea:	b2 cf       	rjmp	.-156    	; 0x650 <vfprintf+0x58>
 6ec:	98 2f       	mov	r25, r24
 6ee:	9f 7d       	andi	r25, 0xDF	; 223
 6f0:	95 54       	subi	r25, 0x45	; 69
 6f2:	93 30       	cpi	r25, 0x03	; 3
 6f4:	28 f4       	brcc	.+10     	; 0x700 <vfprintf+0x108>
 6f6:	0c 5f       	subi	r16, 0xFC	; 252
 6f8:	1f 4f       	sbci	r17, 0xFF	; 255
 6fa:	2f e3       	ldi	r18, 0x3F	; 63
 6fc:	29 83       	std	Y+1, r18	; 0x01
 6fe:	0d c0       	rjmp	.+26     	; 0x71a <vfprintf+0x122>
 700:	83 36       	cpi	r24, 0x63	; 99
 702:	31 f0       	breq	.+12     	; 0x710 <vfprintf+0x118>
 704:	83 37       	cpi	r24, 0x73	; 115
 706:	71 f0       	breq	.+28     	; 0x724 <vfprintf+0x12c>
 708:	83 35       	cpi	r24, 0x53	; 83
 70a:	09 f0       	breq	.+2      	; 0x70e <vfprintf+0x116>
 70c:	55 c0       	rjmp	.+170    	; 0x7b8 <vfprintf+0x1c0>
 70e:	20 c0       	rjmp	.+64     	; 0x750 <vfprintf+0x158>
 710:	f8 01       	movw	r30, r16
 712:	80 81       	ld	r24, Z
 714:	89 83       	std	Y+1, r24	; 0x01
 716:	0e 5f       	subi	r16, 0xFE	; 254
 718:	1f 4f       	sbci	r17, 0xFF	; 255
 71a:	88 24       	eor	r8, r8
 71c:	83 94       	inc	r8
 71e:	91 2c       	mov	r9, r1
 720:	53 01       	movw	r10, r6
 722:	12 c0       	rjmp	.+36     	; 0x748 <vfprintf+0x150>
 724:	28 01       	movw	r4, r16
 726:	f2 e0       	ldi	r31, 0x02	; 2
 728:	4f 0e       	add	r4, r31
 72a:	51 1c       	adc	r5, r1
 72c:	f8 01       	movw	r30, r16
 72e:	a0 80       	ld	r10, Z
 730:	b1 80       	ldd	r11, Z+1	; 0x01
 732:	36 fe       	sbrs	r3, 6
 734:	03 c0       	rjmp	.+6      	; 0x73c <vfprintf+0x144>
 736:	69 2d       	mov	r22, r9
 738:	70 e0       	ldi	r23, 0x00	; 0
 73a:	02 c0       	rjmp	.+4      	; 0x740 <vfprintf+0x148>
 73c:	6f ef       	ldi	r22, 0xFF	; 255
 73e:	7f ef       	ldi	r23, 0xFF	; 255
 740:	c5 01       	movw	r24, r10
 742:	38 d1       	rcall	.+624    	; 0x9b4 <strnlen>
 744:	4c 01       	movw	r8, r24
 746:	82 01       	movw	r16, r4
 748:	f3 2d       	mov	r31, r3
 74a:	ff 77       	andi	r31, 0x7F	; 127
 74c:	3f 2e       	mov	r3, r31
 74e:	15 c0       	rjmp	.+42     	; 0x77a <vfprintf+0x182>
 750:	28 01       	movw	r4, r16
 752:	22 e0       	ldi	r18, 0x02	; 2
 754:	42 0e       	add	r4, r18
 756:	51 1c       	adc	r5, r1
 758:	f8 01       	movw	r30, r16
 75a:	a0 80       	ld	r10, Z
 75c:	b1 80       	ldd	r11, Z+1	; 0x01
 75e:	36 fe       	sbrs	r3, 6
 760:	03 c0       	rjmp	.+6      	; 0x768 <vfprintf+0x170>
 762:	69 2d       	mov	r22, r9
 764:	70 e0       	ldi	r23, 0x00	; 0
 766:	02 c0       	rjmp	.+4      	; 0x76c <vfprintf+0x174>
 768:	6f ef       	ldi	r22, 0xFF	; 255
 76a:	7f ef       	ldi	r23, 0xFF	; 255
 76c:	c5 01       	movw	r24, r10
 76e:	17 d1       	rcall	.+558    	; 0x99e <strnlen_P>
 770:	4c 01       	movw	r8, r24
 772:	f3 2d       	mov	r31, r3
 774:	f0 68       	ori	r31, 0x80	; 128
 776:	3f 2e       	mov	r3, r31
 778:	82 01       	movw	r16, r4
 77a:	33 fc       	sbrc	r3, 3
 77c:	19 c0       	rjmp	.+50     	; 0x7b0 <vfprintf+0x1b8>
 77e:	82 2d       	mov	r24, r2
 780:	90 e0       	ldi	r25, 0x00	; 0
 782:	88 16       	cp	r8, r24
 784:	99 06       	cpc	r9, r25
 786:	a0 f4       	brcc	.+40     	; 0x7b0 <vfprintf+0x1b8>
 788:	b6 01       	movw	r22, r12
 78a:	80 e2       	ldi	r24, 0x20	; 32
 78c:	90 e0       	ldi	r25, 0x00	; 0
 78e:	1d d1       	rcall	.+570    	; 0x9ca <fputc>
 790:	2a 94       	dec	r2
 792:	f5 cf       	rjmp	.-22     	; 0x77e <vfprintf+0x186>
 794:	f5 01       	movw	r30, r10
 796:	37 fc       	sbrc	r3, 7
 798:	85 91       	lpm	r24, Z+
 79a:	37 fe       	sbrs	r3, 7
 79c:	81 91       	ld	r24, Z+
 79e:	5f 01       	movw	r10, r30
 7a0:	b6 01       	movw	r22, r12
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	12 d1       	rcall	.+548    	; 0x9ca <fputc>
 7a6:	21 10       	cpse	r2, r1
 7a8:	2a 94       	dec	r2
 7aa:	21 e0       	ldi	r18, 0x01	; 1
 7ac:	82 1a       	sub	r8, r18
 7ae:	91 08       	sbc	r9, r1
 7b0:	81 14       	cp	r8, r1
 7b2:	91 04       	cpc	r9, r1
 7b4:	79 f7       	brne	.-34     	; 0x794 <vfprintf+0x19c>
 7b6:	e1 c0       	rjmp	.+450    	; 0x97a <vfprintf+0x382>
 7b8:	84 36       	cpi	r24, 0x64	; 100
 7ba:	11 f0       	breq	.+4      	; 0x7c0 <vfprintf+0x1c8>
 7bc:	89 36       	cpi	r24, 0x69	; 105
 7be:	39 f5       	brne	.+78     	; 0x80e <vfprintf+0x216>
 7c0:	f8 01       	movw	r30, r16
 7c2:	37 fe       	sbrs	r3, 7
 7c4:	07 c0       	rjmp	.+14     	; 0x7d4 <vfprintf+0x1dc>
 7c6:	60 81       	ld	r22, Z
 7c8:	71 81       	ldd	r23, Z+1	; 0x01
 7ca:	82 81       	ldd	r24, Z+2	; 0x02
 7cc:	93 81       	ldd	r25, Z+3	; 0x03
 7ce:	0c 5f       	subi	r16, 0xFC	; 252
 7d0:	1f 4f       	sbci	r17, 0xFF	; 255
 7d2:	08 c0       	rjmp	.+16     	; 0x7e4 <vfprintf+0x1ec>
 7d4:	60 81       	ld	r22, Z
 7d6:	71 81       	ldd	r23, Z+1	; 0x01
 7d8:	07 2e       	mov	r0, r23
 7da:	00 0c       	add	r0, r0
 7dc:	88 0b       	sbc	r24, r24
 7de:	99 0b       	sbc	r25, r25
 7e0:	0e 5f       	subi	r16, 0xFE	; 254
 7e2:	1f 4f       	sbci	r17, 0xFF	; 255
 7e4:	f3 2d       	mov	r31, r3
 7e6:	ff 76       	andi	r31, 0x6F	; 111
 7e8:	3f 2e       	mov	r3, r31
 7ea:	97 ff       	sbrs	r25, 7
 7ec:	09 c0       	rjmp	.+18     	; 0x800 <vfprintf+0x208>
 7ee:	90 95       	com	r25
 7f0:	80 95       	com	r24
 7f2:	70 95       	com	r23
 7f4:	61 95       	neg	r22
 7f6:	7f 4f       	sbci	r23, 0xFF	; 255
 7f8:	8f 4f       	sbci	r24, 0xFF	; 255
 7fa:	9f 4f       	sbci	r25, 0xFF	; 255
 7fc:	f0 68       	ori	r31, 0x80	; 128
 7fe:	3f 2e       	mov	r3, r31
 800:	2a e0       	ldi	r18, 0x0A	; 10
 802:	30 e0       	ldi	r19, 0x00	; 0
 804:	a3 01       	movw	r20, r6
 806:	1d d1       	rcall	.+570    	; 0xa42 <__ultoa_invert>
 808:	88 2e       	mov	r8, r24
 80a:	86 18       	sub	r8, r6
 80c:	44 c0       	rjmp	.+136    	; 0x896 <vfprintf+0x29e>
 80e:	85 37       	cpi	r24, 0x75	; 117
 810:	31 f4       	brne	.+12     	; 0x81e <vfprintf+0x226>
 812:	23 2d       	mov	r18, r3
 814:	2f 7e       	andi	r18, 0xEF	; 239
 816:	b2 2e       	mov	r11, r18
 818:	2a e0       	ldi	r18, 0x0A	; 10
 81a:	30 e0       	ldi	r19, 0x00	; 0
 81c:	25 c0       	rjmp	.+74     	; 0x868 <vfprintf+0x270>
 81e:	93 2d       	mov	r25, r3
 820:	99 7f       	andi	r25, 0xF9	; 249
 822:	b9 2e       	mov	r11, r25
 824:	8f 36       	cpi	r24, 0x6F	; 111
 826:	c1 f0       	breq	.+48     	; 0x858 <vfprintf+0x260>
 828:	18 f4       	brcc	.+6      	; 0x830 <vfprintf+0x238>
 82a:	88 35       	cpi	r24, 0x58	; 88
 82c:	79 f0       	breq	.+30     	; 0x84c <vfprintf+0x254>
 82e:	ae c0       	rjmp	.+348    	; 0x98c <vfprintf+0x394>
 830:	80 37       	cpi	r24, 0x70	; 112
 832:	19 f0       	breq	.+6      	; 0x83a <vfprintf+0x242>
 834:	88 37       	cpi	r24, 0x78	; 120
 836:	21 f0       	breq	.+8      	; 0x840 <vfprintf+0x248>
 838:	a9 c0       	rjmp	.+338    	; 0x98c <vfprintf+0x394>
 83a:	e9 2f       	mov	r30, r25
 83c:	e0 61       	ori	r30, 0x10	; 16
 83e:	be 2e       	mov	r11, r30
 840:	b4 fe       	sbrs	r11, 4
 842:	0d c0       	rjmp	.+26     	; 0x85e <vfprintf+0x266>
 844:	fb 2d       	mov	r31, r11
 846:	f4 60       	ori	r31, 0x04	; 4
 848:	bf 2e       	mov	r11, r31
 84a:	09 c0       	rjmp	.+18     	; 0x85e <vfprintf+0x266>
 84c:	34 fe       	sbrs	r3, 4
 84e:	0a c0       	rjmp	.+20     	; 0x864 <vfprintf+0x26c>
 850:	29 2f       	mov	r18, r25
 852:	26 60       	ori	r18, 0x06	; 6
 854:	b2 2e       	mov	r11, r18
 856:	06 c0       	rjmp	.+12     	; 0x864 <vfprintf+0x26c>
 858:	28 e0       	ldi	r18, 0x08	; 8
 85a:	30 e0       	ldi	r19, 0x00	; 0
 85c:	05 c0       	rjmp	.+10     	; 0x868 <vfprintf+0x270>
 85e:	20 e1       	ldi	r18, 0x10	; 16
 860:	30 e0       	ldi	r19, 0x00	; 0
 862:	02 c0       	rjmp	.+4      	; 0x868 <vfprintf+0x270>
 864:	20 e1       	ldi	r18, 0x10	; 16
 866:	32 e0       	ldi	r19, 0x02	; 2
 868:	f8 01       	movw	r30, r16
 86a:	b7 fe       	sbrs	r11, 7
 86c:	07 c0       	rjmp	.+14     	; 0x87c <vfprintf+0x284>
 86e:	60 81       	ld	r22, Z
 870:	71 81       	ldd	r23, Z+1	; 0x01
 872:	82 81       	ldd	r24, Z+2	; 0x02
 874:	93 81       	ldd	r25, Z+3	; 0x03
 876:	0c 5f       	subi	r16, 0xFC	; 252
 878:	1f 4f       	sbci	r17, 0xFF	; 255
 87a:	06 c0       	rjmp	.+12     	; 0x888 <vfprintf+0x290>
 87c:	60 81       	ld	r22, Z
 87e:	71 81       	ldd	r23, Z+1	; 0x01
 880:	80 e0       	ldi	r24, 0x00	; 0
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	0e 5f       	subi	r16, 0xFE	; 254
 886:	1f 4f       	sbci	r17, 0xFF	; 255
 888:	a3 01       	movw	r20, r6
 88a:	db d0       	rcall	.+438    	; 0xa42 <__ultoa_invert>
 88c:	88 2e       	mov	r8, r24
 88e:	86 18       	sub	r8, r6
 890:	fb 2d       	mov	r31, r11
 892:	ff 77       	andi	r31, 0x7F	; 127
 894:	3f 2e       	mov	r3, r31
 896:	36 fe       	sbrs	r3, 6
 898:	0d c0       	rjmp	.+26     	; 0x8b4 <vfprintf+0x2bc>
 89a:	23 2d       	mov	r18, r3
 89c:	2e 7f       	andi	r18, 0xFE	; 254
 89e:	a2 2e       	mov	r10, r18
 8a0:	89 14       	cp	r8, r9
 8a2:	58 f4       	brcc	.+22     	; 0x8ba <vfprintf+0x2c2>
 8a4:	34 fe       	sbrs	r3, 4
 8a6:	0b c0       	rjmp	.+22     	; 0x8be <vfprintf+0x2c6>
 8a8:	32 fc       	sbrc	r3, 2
 8aa:	09 c0       	rjmp	.+18     	; 0x8be <vfprintf+0x2c6>
 8ac:	83 2d       	mov	r24, r3
 8ae:	8e 7e       	andi	r24, 0xEE	; 238
 8b0:	a8 2e       	mov	r10, r24
 8b2:	05 c0       	rjmp	.+10     	; 0x8be <vfprintf+0x2c6>
 8b4:	b8 2c       	mov	r11, r8
 8b6:	a3 2c       	mov	r10, r3
 8b8:	03 c0       	rjmp	.+6      	; 0x8c0 <vfprintf+0x2c8>
 8ba:	b8 2c       	mov	r11, r8
 8bc:	01 c0       	rjmp	.+2      	; 0x8c0 <vfprintf+0x2c8>
 8be:	b9 2c       	mov	r11, r9
 8c0:	a4 fe       	sbrs	r10, 4
 8c2:	0f c0       	rjmp	.+30     	; 0x8e2 <vfprintf+0x2ea>
 8c4:	fe 01       	movw	r30, r28
 8c6:	e8 0d       	add	r30, r8
 8c8:	f1 1d       	adc	r31, r1
 8ca:	80 81       	ld	r24, Z
 8cc:	80 33       	cpi	r24, 0x30	; 48
 8ce:	21 f4       	brne	.+8      	; 0x8d8 <vfprintf+0x2e0>
 8d0:	9a 2d       	mov	r25, r10
 8d2:	99 7e       	andi	r25, 0xE9	; 233
 8d4:	a9 2e       	mov	r10, r25
 8d6:	09 c0       	rjmp	.+18     	; 0x8ea <vfprintf+0x2f2>
 8d8:	a2 fe       	sbrs	r10, 2
 8da:	06 c0       	rjmp	.+12     	; 0x8e8 <vfprintf+0x2f0>
 8dc:	b3 94       	inc	r11
 8de:	b3 94       	inc	r11
 8e0:	04 c0       	rjmp	.+8      	; 0x8ea <vfprintf+0x2f2>
 8e2:	8a 2d       	mov	r24, r10
 8e4:	86 78       	andi	r24, 0x86	; 134
 8e6:	09 f0       	breq	.+2      	; 0x8ea <vfprintf+0x2f2>
 8e8:	b3 94       	inc	r11
 8ea:	a3 fc       	sbrc	r10, 3
 8ec:	10 c0       	rjmp	.+32     	; 0x90e <vfprintf+0x316>
 8ee:	a0 fe       	sbrs	r10, 0
 8f0:	06 c0       	rjmp	.+12     	; 0x8fe <vfprintf+0x306>
 8f2:	b2 14       	cp	r11, r2
 8f4:	80 f4       	brcc	.+32     	; 0x916 <vfprintf+0x31e>
 8f6:	28 0c       	add	r2, r8
 8f8:	92 2c       	mov	r9, r2
 8fa:	9b 18       	sub	r9, r11
 8fc:	0d c0       	rjmp	.+26     	; 0x918 <vfprintf+0x320>
 8fe:	b2 14       	cp	r11, r2
 900:	58 f4       	brcc	.+22     	; 0x918 <vfprintf+0x320>
 902:	b6 01       	movw	r22, r12
 904:	80 e2       	ldi	r24, 0x20	; 32
 906:	90 e0       	ldi	r25, 0x00	; 0
 908:	60 d0       	rcall	.+192    	; 0x9ca <fputc>
 90a:	b3 94       	inc	r11
 90c:	f8 cf       	rjmp	.-16     	; 0x8fe <vfprintf+0x306>
 90e:	b2 14       	cp	r11, r2
 910:	18 f4       	brcc	.+6      	; 0x918 <vfprintf+0x320>
 912:	2b 18       	sub	r2, r11
 914:	02 c0       	rjmp	.+4      	; 0x91a <vfprintf+0x322>
 916:	98 2c       	mov	r9, r8
 918:	21 2c       	mov	r2, r1
 91a:	a4 fe       	sbrs	r10, 4
 91c:	0f c0       	rjmp	.+30     	; 0x93c <vfprintf+0x344>
 91e:	b6 01       	movw	r22, r12
 920:	80 e3       	ldi	r24, 0x30	; 48
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	52 d0       	rcall	.+164    	; 0x9ca <fputc>
 926:	a2 fe       	sbrs	r10, 2
 928:	16 c0       	rjmp	.+44     	; 0x956 <vfprintf+0x35e>
 92a:	a1 fc       	sbrc	r10, 1
 92c:	03 c0       	rjmp	.+6      	; 0x934 <vfprintf+0x33c>
 92e:	88 e7       	ldi	r24, 0x78	; 120
 930:	90 e0       	ldi	r25, 0x00	; 0
 932:	02 c0       	rjmp	.+4      	; 0x938 <vfprintf+0x340>
 934:	88 e5       	ldi	r24, 0x58	; 88
 936:	90 e0       	ldi	r25, 0x00	; 0
 938:	b6 01       	movw	r22, r12
 93a:	0c c0       	rjmp	.+24     	; 0x954 <vfprintf+0x35c>
 93c:	8a 2d       	mov	r24, r10
 93e:	86 78       	andi	r24, 0x86	; 134
 940:	51 f0       	breq	.+20     	; 0x956 <vfprintf+0x35e>
 942:	a1 fe       	sbrs	r10, 1
 944:	02 c0       	rjmp	.+4      	; 0x94a <vfprintf+0x352>
 946:	8b e2       	ldi	r24, 0x2B	; 43
 948:	01 c0       	rjmp	.+2      	; 0x94c <vfprintf+0x354>
 94a:	80 e2       	ldi	r24, 0x20	; 32
 94c:	a7 fc       	sbrc	r10, 7
 94e:	8d e2       	ldi	r24, 0x2D	; 45
 950:	b6 01       	movw	r22, r12
 952:	90 e0       	ldi	r25, 0x00	; 0
 954:	3a d0       	rcall	.+116    	; 0x9ca <fputc>
 956:	89 14       	cp	r8, r9
 958:	30 f4       	brcc	.+12     	; 0x966 <vfprintf+0x36e>
 95a:	b6 01       	movw	r22, r12
 95c:	80 e3       	ldi	r24, 0x30	; 48
 95e:	90 e0       	ldi	r25, 0x00	; 0
 960:	34 d0       	rcall	.+104    	; 0x9ca <fputc>
 962:	9a 94       	dec	r9
 964:	f8 cf       	rjmp	.-16     	; 0x956 <vfprintf+0x35e>
 966:	8a 94       	dec	r8
 968:	f3 01       	movw	r30, r6
 96a:	e8 0d       	add	r30, r8
 96c:	f1 1d       	adc	r31, r1
 96e:	80 81       	ld	r24, Z
 970:	b6 01       	movw	r22, r12
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	2a d0       	rcall	.+84     	; 0x9ca <fputc>
 976:	81 10       	cpse	r8, r1
 978:	f6 cf       	rjmp	.-20     	; 0x966 <vfprintf+0x36e>
 97a:	22 20       	and	r2, r2
 97c:	09 f4       	brne	.+2      	; 0x980 <vfprintf+0x388>
 97e:	4d ce       	rjmp	.-870    	; 0x61a <vfprintf+0x22>
 980:	b6 01       	movw	r22, r12
 982:	80 e2       	ldi	r24, 0x20	; 32
 984:	90 e0       	ldi	r25, 0x00	; 0
 986:	21 d0       	rcall	.+66     	; 0x9ca <fputc>
 988:	2a 94       	dec	r2
 98a:	f7 cf       	rjmp	.-18     	; 0x97a <vfprintf+0x382>
 98c:	f6 01       	movw	r30, r12
 98e:	86 81       	ldd	r24, Z+6	; 0x06
 990:	97 81       	ldd	r25, Z+7	; 0x07
 992:	02 c0       	rjmp	.+4      	; 0x998 <vfprintf+0x3a0>
 994:	8f ef       	ldi	r24, 0xFF	; 255
 996:	9f ef       	ldi	r25, 0xFF	; 255
 998:	2b 96       	adiw	r28, 0x0b	; 11
 99a:	e2 e1       	ldi	r30, 0x12	; 18
 99c:	d7 c0       	rjmp	.+430    	; 0xb4c <__epilogue_restores__>

0000099e <strnlen_P>:
 99e:	fc 01       	movw	r30, r24
 9a0:	05 90       	lpm	r0, Z+
 9a2:	61 50       	subi	r22, 0x01	; 1
 9a4:	70 40       	sbci	r23, 0x00	; 0
 9a6:	01 10       	cpse	r0, r1
 9a8:	d8 f7       	brcc	.-10     	; 0x9a0 <strnlen_P+0x2>
 9aa:	80 95       	com	r24
 9ac:	90 95       	com	r25
 9ae:	8e 0f       	add	r24, r30
 9b0:	9f 1f       	adc	r25, r31
 9b2:	08 95       	ret

000009b4 <strnlen>:
 9b4:	fc 01       	movw	r30, r24
 9b6:	61 50       	subi	r22, 0x01	; 1
 9b8:	70 40       	sbci	r23, 0x00	; 0
 9ba:	01 90       	ld	r0, Z+
 9bc:	01 10       	cpse	r0, r1
 9be:	d8 f7       	brcc	.-10     	; 0x9b6 <strnlen+0x2>
 9c0:	80 95       	com	r24
 9c2:	90 95       	com	r25
 9c4:	8e 0f       	add	r24, r30
 9c6:	9f 1f       	adc	r25, r31
 9c8:	08 95       	ret

000009ca <fputc>:
 9ca:	0f 93       	push	r16
 9cc:	1f 93       	push	r17
 9ce:	cf 93       	push	r28
 9d0:	df 93       	push	r29
 9d2:	fb 01       	movw	r30, r22
 9d4:	23 81       	ldd	r18, Z+3	; 0x03
 9d6:	21 fd       	sbrc	r18, 1
 9d8:	03 c0       	rjmp	.+6      	; 0x9e0 <fputc+0x16>
 9da:	8f ef       	ldi	r24, 0xFF	; 255
 9dc:	9f ef       	ldi	r25, 0xFF	; 255
 9de:	2c c0       	rjmp	.+88     	; 0xa38 <fputc+0x6e>
 9e0:	22 ff       	sbrs	r18, 2
 9e2:	16 c0       	rjmp	.+44     	; 0xa10 <fputc+0x46>
 9e4:	46 81       	ldd	r20, Z+6	; 0x06
 9e6:	57 81       	ldd	r21, Z+7	; 0x07
 9e8:	24 81       	ldd	r18, Z+4	; 0x04
 9ea:	35 81       	ldd	r19, Z+5	; 0x05
 9ec:	42 17       	cp	r20, r18
 9ee:	53 07       	cpc	r21, r19
 9f0:	44 f4       	brge	.+16     	; 0xa02 <fputc+0x38>
 9f2:	a0 81       	ld	r26, Z
 9f4:	b1 81       	ldd	r27, Z+1	; 0x01
 9f6:	9d 01       	movw	r18, r26
 9f8:	2f 5f       	subi	r18, 0xFF	; 255
 9fa:	3f 4f       	sbci	r19, 0xFF	; 255
 9fc:	31 83       	std	Z+1, r19	; 0x01
 9fe:	20 83       	st	Z, r18
 a00:	8c 93       	st	X, r24
 a02:	26 81       	ldd	r18, Z+6	; 0x06
 a04:	37 81       	ldd	r19, Z+7	; 0x07
 a06:	2f 5f       	subi	r18, 0xFF	; 255
 a08:	3f 4f       	sbci	r19, 0xFF	; 255
 a0a:	37 83       	std	Z+7, r19	; 0x07
 a0c:	26 83       	std	Z+6, r18	; 0x06
 a0e:	14 c0       	rjmp	.+40     	; 0xa38 <fputc+0x6e>
 a10:	8b 01       	movw	r16, r22
 a12:	ec 01       	movw	r28, r24
 a14:	fb 01       	movw	r30, r22
 a16:	00 84       	ldd	r0, Z+8	; 0x08
 a18:	f1 85       	ldd	r31, Z+9	; 0x09
 a1a:	e0 2d       	mov	r30, r0
 a1c:	09 95       	icall
 a1e:	89 2b       	or	r24, r25
 a20:	e1 f6       	brne	.-72     	; 0x9da <fputc+0x10>
 a22:	d8 01       	movw	r26, r16
 a24:	16 96       	adiw	r26, 0x06	; 6
 a26:	8d 91       	ld	r24, X+
 a28:	9c 91       	ld	r25, X
 a2a:	17 97       	sbiw	r26, 0x07	; 7
 a2c:	01 96       	adiw	r24, 0x01	; 1
 a2e:	17 96       	adiw	r26, 0x07	; 7
 a30:	9c 93       	st	X, r25
 a32:	8e 93       	st	-X, r24
 a34:	16 97       	sbiw	r26, 0x06	; 6
 a36:	ce 01       	movw	r24, r28
 a38:	df 91       	pop	r29
 a3a:	cf 91       	pop	r28
 a3c:	1f 91       	pop	r17
 a3e:	0f 91       	pop	r16
 a40:	08 95       	ret

00000a42 <__ultoa_invert>:
 a42:	fa 01       	movw	r30, r20
 a44:	aa 27       	eor	r26, r26
 a46:	28 30       	cpi	r18, 0x08	; 8
 a48:	61 f1       	breq	.+88     	; 0xaa2 <__ultoa_invert+0x60>
 a4a:	20 31       	cpi	r18, 0x10	; 16
 a4c:	91 f1       	breq	.+100    	; 0xab2 <__ultoa_invert+0x70>
 a4e:	e8 94       	clt
 a50:	6f 93       	push	r22
 a52:	6e 7f       	andi	r22, 0xFE	; 254
 a54:	6e 5f       	subi	r22, 0xFE	; 254
 a56:	7f 4f       	sbci	r23, 0xFF	; 255
 a58:	8f 4f       	sbci	r24, 0xFF	; 255
 a5a:	9f 4f       	sbci	r25, 0xFF	; 255
 a5c:	af 4f       	sbci	r26, 0xFF	; 255
 a5e:	b1 e0       	ldi	r27, 0x01	; 1
 a60:	40 d0       	rcall	.+128    	; 0xae2 <__ultoa_invert+0xa0>
 a62:	b4 e0       	ldi	r27, 0x04	; 4
 a64:	3e d0       	rcall	.+124    	; 0xae2 <__ultoa_invert+0xa0>
 a66:	67 0f       	add	r22, r23
 a68:	78 1f       	adc	r23, r24
 a6a:	89 1f       	adc	r24, r25
 a6c:	9a 1f       	adc	r25, r26
 a6e:	a1 1d       	adc	r26, r1
 a70:	68 0f       	add	r22, r24
 a72:	79 1f       	adc	r23, r25
 a74:	8a 1f       	adc	r24, r26
 a76:	91 1d       	adc	r25, r1
 a78:	a1 1d       	adc	r26, r1
 a7a:	6a 0f       	add	r22, r26
 a7c:	71 1d       	adc	r23, r1
 a7e:	81 1d       	adc	r24, r1
 a80:	91 1d       	adc	r25, r1
 a82:	a1 1d       	adc	r26, r1
 a84:	22 d0       	rcall	.+68     	; 0xaca <__ultoa_invert+0x88>
 a86:	09 f4       	brne	.+2      	; 0xa8a <__ultoa_invert+0x48>
 a88:	68 94       	set
 a8a:	3f 91       	pop	r19
 a8c:	06 2e       	mov	r0, r22
 a8e:	00 0c       	add	r0, r0
 a90:	30 19       	sub	r19, r0
 a92:	00 0c       	add	r0, r0
 a94:	00 0c       	add	r0, r0
 a96:	30 19       	sub	r19, r0
 a98:	30 5d       	subi	r19, 0xD0	; 208
 a9a:	31 93       	st	Z+, r19
 a9c:	ce f6       	brtc	.-78     	; 0xa50 <__ultoa_invert+0xe>
 a9e:	cf 01       	movw	r24, r30
 aa0:	08 95       	ret
 aa2:	46 2f       	mov	r20, r22
 aa4:	47 70       	andi	r20, 0x07	; 7
 aa6:	40 5d       	subi	r20, 0xD0	; 208
 aa8:	41 93       	st	Z+, r20
 aaa:	b3 e0       	ldi	r27, 0x03	; 3
 aac:	0f d0       	rcall	.+30     	; 0xacc <__ultoa_invert+0x8a>
 aae:	c9 f7       	brne	.-14     	; 0xaa2 <__ultoa_invert+0x60>
 ab0:	f6 cf       	rjmp	.-20     	; 0xa9e <__ultoa_invert+0x5c>
 ab2:	46 2f       	mov	r20, r22
 ab4:	4f 70       	andi	r20, 0x0F	; 15
 ab6:	40 5d       	subi	r20, 0xD0	; 208
 ab8:	4a 33       	cpi	r20, 0x3A	; 58
 aba:	18 f0       	brcs	.+6      	; 0xac2 <__ultoa_invert+0x80>
 abc:	49 5d       	subi	r20, 0xD9	; 217
 abe:	31 fd       	sbrc	r19, 1
 ac0:	40 52       	subi	r20, 0x20	; 32
 ac2:	41 93       	st	Z+, r20
 ac4:	02 d0       	rcall	.+4      	; 0xaca <__ultoa_invert+0x88>
 ac6:	a9 f7       	brne	.-22     	; 0xab2 <__ultoa_invert+0x70>
 ac8:	ea cf       	rjmp	.-44     	; 0xa9e <__ultoa_invert+0x5c>
 aca:	b4 e0       	ldi	r27, 0x04	; 4
 acc:	a6 95       	lsr	r26
 ace:	97 95       	ror	r25
 ad0:	87 95       	ror	r24
 ad2:	77 95       	ror	r23
 ad4:	67 95       	ror	r22
 ad6:	ba 95       	dec	r27
 ad8:	c9 f7       	brne	.-14     	; 0xacc <__ultoa_invert+0x8a>
 ada:	00 97       	sbiw	r24, 0x00	; 0
 adc:	61 05       	cpc	r22, r1
 ade:	71 05       	cpc	r23, r1
 ae0:	08 95       	ret
 ae2:	9b 01       	movw	r18, r22
 ae4:	ac 01       	movw	r20, r24
 ae6:	0a 2e       	mov	r0, r26
 ae8:	06 94       	lsr	r0
 aea:	57 95       	ror	r21
 aec:	47 95       	ror	r20
 aee:	37 95       	ror	r19
 af0:	27 95       	ror	r18
 af2:	ba 95       	dec	r27
 af4:	c9 f7       	brne	.-14     	; 0xae8 <__ultoa_invert+0xa6>
 af6:	62 0f       	add	r22, r18
 af8:	73 1f       	adc	r23, r19
 afa:	84 1f       	adc	r24, r20
 afc:	95 1f       	adc	r25, r21
 afe:	a0 1d       	adc	r26, r0
 b00:	08 95       	ret

00000b02 <__mulqi3>:
 b02:	00 24       	eor	r0, r0

00000b04 <__mulqi3_loop>:
 b04:	80 fd       	sbrc	r24, 0
 b06:	06 0e       	add	r0, r22
 b08:	66 0f       	add	r22, r22
 b0a:	11 f0       	breq	.+4      	; 0xb10 <__mulqi3_exit>
 b0c:	86 95       	lsr	r24
 b0e:	d1 f7       	brne	.-12     	; 0xb04 <__mulqi3_loop>

00000b10 <__mulqi3_exit>:
 b10:	80 2d       	mov	r24, r0
 b12:	08 95       	ret

00000b14 <__prologue_saves__>:
 b14:	2f 92       	push	r2
 b16:	3f 92       	push	r3
 b18:	4f 92       	push	r4
 b1a:	5f 92       	push	r5
 b1c:	6f 92       	push	r6
 b1e:	7f 92       	push	r7
 b20:	8f 92       	push	r8
 b22:	9f 92       	push	r9
 b24:	af 92       	push	r10
 b26:	bf 92       	push	r11
 b28:	cf 92       	push	r12
 b2a:	df 92       	push	r13
 b2c:	ef 92       	push	r14
 b2e:	ff 92       	push	r15
 b30:	0f 93       	push	r16
 b32:	1f 93       	push	r17
 b34:	cf 93       	push	r28
 b36:	df 93       	push	r29
 b38:	cd b7       	in	r28, 0x3d	; 61
 b3a:	de b7       	in	r29, 0x3e	; 62
 b3c:	ca 1b       	sub	r28, r26
 b3e:	db 0b       	sbc	r29, r27
 b40:	0f b6       	in	r0, 0x3f	; 63
 b42:	f8 94       	cli
 b44:	de bf       	out	0x3e, r29	; 62
 b46:	0f be       	out	0x3f, r0	; 63
 b48:	cd bf       	out	0x3d, r28	; 61
 b4a:	09 94       	ijmp

00000b4c <__epilogue_restores__>:
 b4c:	2a 88       	ldd	r2, Y+18	; 0x12
 b4e:	39 88       	ldd	r3, Y+17	; 0x11
 b50:	48 88       	ldd	r4, Y+16	; 0x10
 b52:	5f 84       	ldd	r5, Y+15	; 0x0f
 b54:	6e 84       	ldd	r6, Y+14	; 0x0e
 b56:	7d 84       	ldd	r7, Y+13	; 0x0d
 b58:	8c 84       	ldd	r8, Y+12	; 0x0c
 b5a:	9b 84       	ldd	r9, Y+11	; 0x0b
 b5c:	aa 84       	ldd	r10, Y+10	; 0x0a
 b5e:	b9 84       	ldd	r11, Y+9	; 0x09
 b60:	c8 84       	ldd	r12, Y+8	; 0x08
 b62:	df 80       	ldd	r13, Y+7	; 0x07
 b64:	ee 80       	ldd	r14, Y+6	; 0x06
 b66:	fd 80       	ldd	r15, Y+5	; 0x05
 b68:	0c 81       	ldd	r16, Y+4	; 0x04
 b6a:	1b 81       	ldd	r17, Y+3	; 0x03
 b6c:	aa 81       	ldd	r26, Y+2	; 0x02
 b6e:	b9 81       	ldd	r27, Y+1	; 0x01
 b70:	ce 0f       	add	r28, r30
 b72:	d1 1d       	adc	r29, r1
 b74:	0f b6       	in	r0, 0x3f	; 63
 b76:	f8 94       	cli
 b78:	de bf       	out	0x3e, r29	; 62
 b7a:	0f be       	out	0x3f, r0	; 63
 b7c:	cd bf       	out	0x3d, r28	; 61
 b7e:	ed 01       	movw	r28, r26
 b80:	08 95       	ret

00000b82 <_exit>:
 b82:	f8 94       	cli

00000b84 <__stop_program>:
 b84:	ff cf       	rjmp	.-2      	; 0xb84 <__stop_program>
